<UserControl x:Class="ArtWiz.View.Widgets.WindowTitleBar"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:local="clr-namespace:ArtWiz.View.Widgets"
			 xmlns:def="clr-namespace:ArtWiz"
			 xmlns:vutil="clr-namespace:ArtWiz.View.Utils"
			 xmlns:bview="clr-namespace:ArtWiz.View.Base"
			 Focusable="True"
			 mc:Ignorable="d"
			 d:DesignHeight="{Binding ElementName=WindowBarContainer,Path=WindowBarHeight, FallbackValue=90}"
			 d:DesignWidth="800"
			 x:Name="WindowBarContainer">
	<UserControl.Resources>
		<!--Window control button-->
		<Style x:Key="WindowControlButton"
			   TargetType="{x:Type Button}">
			<Style.Triggers>
				<Trigger Property="IsMouseOver"
						 Value="True">
					<Setter Property="Foreground"
							Value="{StaticResource ResourceKey={x:Static def:Definitions.ForegroundLevel0}}" />
				</Trigger>
			</Style.Triggers>
			<Setter Property="WindowChrome.IsHitTestVisibleInChrome"
					Value="True" />
			<Setter Property="Background"
					Value="Transparent" />
			<Setter Property="Height"
					Value="40" />
			<Setter Property="Width"
					Value="40" />
			<Setter Property="VerticalAlignment"
					Value="Stretch" />
			<Setter Property="Foreground"
					Value="{StaticResource ResourceKey={x:Static def:Definitions.ForegroundLevel1}}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border Background="{TemplateBinding Background}"
								Padding="{TemplateBinding Padding}"
								x:Name="MainBorder">
							<Path x:Name="ContentPath"
								  Width="10"
								  Height="10"
								  Fill="{TemplateBinding Foreground}"
								  Data="{Binding Source={StaticResource CloseButton}}"
								  Stretch="Uniform" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver"
									 Value="True">
								<Setter Property="Height"
										TargetName="ContentPath"
										Value="12" />
								<Setter Property="Width"
										TargetName="ContentPath"
										Value="12" />
								<Setter Property="Background"
										TargetName="MainBorder"
										Value="{StaticResource ResourceKey={x:Static def:Definitions.ForegroundEffectLevel4}}" />
							</Trigger>

						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>


		</Style>

		<!--Window Maximize button-->
		<Style x:Key="WindowMaximizeButton"
			   BasedOn="{StaticResource WindowControlButton}"
			   TargetType="{x:Type Button}">
			<Style.Triggers>
				<DataTrigger Value="NoResize"
							 Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=ResizeMode}">
					<Setter Property="Visibility"
							Value="Collapsed" />
				</DataTrigger>

				<DataTrigger Value="CanResize"
							 Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=ResizeMode}">
					<Setter Property="Visibility"
							Value="Visible" />
				</DataTrigger>

				<DataTrigger Value="Maximized"
							 Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}">
					<Setter Property="Visibility"
							Value="Collapsed" />
				</DataTrigger>
			</Style.Triggers>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border Background="{TemplateBinding Background}"
								Padding="{TemplateBinding Padding}"
								x:Name="MainBorder">
							<Path x:Name="ContentPath"
								  Width="10"
								  Height="10"
								  Fill="{TemplateBinding Foreground}"
								  Data="{Binding Source={StaticResource MaximizeButton}}"
								  Stretch="Uniform" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver"
									 Value="True">
								<Setter Property="Height"
										TargetName="ContentPath"
										Value="12" />
								<Setter Property="Width"
										TargetName="ContentPath"
										Value="12" />
								<Setter Property="Background"
										TargetName="MainBorder"
										Value="{StaticResource ResourceKey={x:Static def:Definitions.ForegroundEffectLevel3}}" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--Window smallmize button-->
		<Style x:Key="WindowSmallmizeButton"
			   BasedOn="{StaticResource WindowControlButton}"
			   TargetType="{x:Type Button}">
			<Style.Triggers>
				<DataTrigger Value="NoResize"
							 Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=ResizeMode}">
					<Setter Property="Visibility"
							Value="Collapsed" />
				</DataTrigger>

				<DataTrigger Value="CanResize"
							 Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=ResizeMode}">
					<Setter Property="Visibility"
							Value="Visible" />
				</DataTrigger>

				<DataTrigger Value="Normal"
							 Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}">
					<Setter Property="Visibility"
							Value="Collapsed" />
				</DataTrigger>
			</Style.Triggers>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border Background="{TemplateBinding Background}"
								Padding="{TemplateBinding Padding}"
								x:Name="MainBorder">
							<Path x:Name="ContentPath"
								  Width="10"
								  Height="10"
								  Fill="{TemplateBinding Foreground}"
								  Data="{Binding Source={StaticResource SmallmizeButton}}"
								  Stretch="Uniform" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver"
									 Value="True">
								<Setter Property="Height"
										TargetName="ContentPath"
										Value="12" />
								<Setter Property="Width"
										TargetName="ContentPath"
										Value="12" />
								<Setter Property="Background"
										TargetName="MainBorder"
										Value="{StaticResource ResourceKey={x:Static def:Definitions.ForegroundEffectLevel3}}" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- Window Minimize Button -->
		<Style x:Key="WindowMinimizeButton"
			   BasedOn="{StaticResource WindowControlButton}"
			   TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="MainBorder"
								Background="{TemplateBinding Background}"
								Padding="{TemplateBinding Padding}">
							<Path x:Name="ContentPath"
								  Width="10"
								  Height="10"
								  Fill="{TemplateBinding Foreground}"
								  Data="{Binding Source={StaticResource MinimizeButton}}"
								  Stretch="Uniform" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver"
									 Value="True">
								<Setter Property="Height"
										TargetName="ContentPath"
										Value="12" />
								<Setter Property="Width"
										TargetName="ContentPath"
										Value="12" />
								<Setter Property="Background"
										TargetName="MainBorder"
										Value="{StaticResource ResourceKey={x:Static def:Definitions.ForegroundEffectLevel3}}" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="menuParentStyle"
			   TargetType="MenuItem">
			<Setter Property="WindowChrome.IsHitTestVisibleInChrome"
					Value="True" />
			<Setter Property="Foreground"
					Value="White" />
			<Setter Property="BorderBrush"
					Value="{StaticResource ResourceKey={x:Static def:Definitions.ForegroundLevel1}}" />

			<Style.Triggers>
				<Trigger Property="IsHighlighted"
						 Value="True">
					<Setter Property="Panel.ZIndex"
							Value="2" />
				</Trigger>
				<Trigger Property="IsHighlighted"
						 Value="False">
					<Setter Property="Panel.ZIndex"
							Value="0" />
				</Trigger>
			</Style.Triggers>
		</Style>

	</UserControl.Resources>
	<Border BorderThickness="0,0,0,1"
			BorderBrush="{StaticResource ResourceKey={x:Static def:Definitions.BackgroundLevel10}}">
		<Grid Background="{StaticResource ResourceKey={x:Static def:Definitions.MenuItemBackground}}"
			  x:Name="ContainerGrid">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />

			</Grid.ColumnDefinitions>

			<StackPanel Orientation="Horizontal"
						HorizontalAlignment="Left">

				<Image Height="38"
					   Stretch="Uniform"
					   Margin="5,0,0,0"
					   Width="38"
					   RenderOptions.BitmapScalingMode="HighQuality"
					   SnapsToDevicePixels="True"
					   Source="/ArtWiz;component/resources/logo_500.png" />
				<TextBlock x:Name="PageTitleTextBlock"
						   Text="Pak Editor"
						   FontSize="18"
						   FontFamily="{DynamicResource ResourceKey={x:Static def:Definitions.FontFiraSans_Bold}}"
						   Foreground="White"
						   VerticalAlignment="Center"
						   Margin="5,0" />
				<Menu x:Name="MainMenu"
					  Background="{StaticResource ResourceKey={x:Static def:Definitions.MenuItemBackground}}"
					  Panel.ZIndex="1"
					  VerticalAlignment="Center"
					  Margin="40,0,0,0"
					  VerticalContentAlignment="Center">
					<MenuItem Header="Trang chủ"
							  Tag="{x:Static vutil:AppMenuTag.HomeMenu}"
							  Style="{StaticResource ResourceKey={x:Static def:Definitions.MenuParentStyle}}">
						<MenuItem Header="Developer mode"
								  Tag="{x:Static vutil:AppMenuTag.DevPageMenu}"
								  Visibility="Collapsed"
								  x:Name="DeveloperModeMenu">
							<MenuItem.Icon>
								<Path Stretch="Uniform"
									  Width="16"
									  Height="16"
									  Fill="White"
									  Data="{StaticResource ResourceKey={x:Static def:Definitions.DeveloperModeIconGeometry}}" />
							</MenuItem.Icon>
						</MenuItem>
						<MenuItem Header="Spr work space"
								  Tag="{x:Static vutil:AppMenuTag.SprEditorPageMenu}"
								  x:Name="SprWorkSpceMenu">
							<MenuItem.Icon>
								<Path Stretch="Uniform"
									  Width="16"
									  Height="16"
									  Fill="White"
									  Data="{StaticResource ResourceKey={x:Static def:Definitions.SprWorkspaceGeometry}}" />
							</MenuItem.Icon>
						</MenuItem>
						<MenuItem Header="Pak work space"
								  Tag="{x:Static vutil:AppMenuTag.PakEditorPageMenu}"
								  x:Name="PakWorkSpaceMenu">
							<MenuItem.Icon>
								<Path  Stretch="Uniform"
									   Width="16"
									   Fill="White"
									   Height="16"
									   Data="{StaticResource ResourceKey={x:Static def:Definitions.PakWorkspaceGeometry}}" />
							</MenuItem.Icon>
						</MenuItem>
					</MenuItem>
					<MenuItem Header="Hỗ trợ"
							  Tag="{x:Static vutil:AppMenuTag.SupportMenu}"
							  Style="{StaticResource ResourceKey={x:Static def:Definitions.MenuParentStyle}}" />
				</Menu>


				<Grid x:Name="MainHeaderContainer">
					<ContentControl Grid.Column="1"
									Grid.Row="1"
									x:Name="CustomHeaderContainer"
									Content="{Binding ElementName=WindowBarContainer, Path=CustomHeaderView}" />

				</Grid>

			</StackPanel>


			<!--Window Buttons-->
			<StackPanel x:Name="WindowControlPanel"
						Grid.Column="1"
						Orientation="Horizontal">

				<Button x:Name="MinimizeButton"
						Margin="0,1"
						Style="{StaticResource WindowMinimizeButton}" />
				<Button x:Name="SmallmizeButton"
						Margin="1,1"
						Style="{StaticResource WindowSmallmizeButton}" />
				<Button x:Name="MaximizeButton"
						Margin="1,1"
						Style="{StaticResource WindowMaximizeButton}" />
				<Button x:Name="CloseButton"
						Margin="0,1"
						Style="{StaticResource WindowControlButton}" />
			</StackPanel>

		</Grid>

	</Border>
</UserControl>
