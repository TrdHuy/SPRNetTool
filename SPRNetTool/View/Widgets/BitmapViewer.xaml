<UserControl x:Class="ArtWiz.View.Widgets.BitmapViewer"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:local="clr-namespace:ArtWiz.View.Widgets"
			 xmlns:cvt="clr-namespace:ArtWiz.View.Utils"
			 xmlns:def="clr-namespace:ArtWiz"
			 mc:Ignorable="d"
			 d:DesignHeight="450"
			 d:DesignWidth="800"
			 x:Name="BitmapViewerContainer">

	<UserControl.Resources>
		<cvt:FormulaConverter x:Key="FormulaConverter" />
		<cvt:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
		<Style TargetType="{x:Type local:IconToggle}"
			   BasedOn="{StaticResource {x:Type local:IconToggle}}"
			   x:Key="ToolButtonStyle">
			<Setter Property="OverridesDefaultStyle"
					Value="False" />
			<Setter Property="IsEllipse"
					Value="False" />
			<Setter Property="Height"
					Value="{Binding ElementName=BitmapViewerContainer, Path=ToolBoxIconSize, FallbackValue=26}" />
			<Setter Property="Width"
					Value="{Binding ElementName=BitmapViewerContainer, Path=ToolBoxIconSize, FallbackValue=26}" />
			<Setter Property="Margin"
					Value="0,10,0,0" />
			<Setter Property="StrokeThickness"
					Value="2" />
			<Setter Property="Fill"
					Value="{Binding ElementName=BitmapViewerContainer, Path=ToolBoxIconFill, FallbackValue=White}" />
			<Setter Property="Stroke"
					Value="{Binding ElementName=BitmapViewerContainer, Path=ToolBoxIconStroke, FallbackValue=Black}" />
		</Style>
	</UserControl.Resources>

	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="auto" />
			<ColumnDefinition x:Name="ContentColumn" />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="*" />
			<RowDefinition Height="auto" />
		</Grid.RowDefinitions>

		<Border Grid.Column="1"
				BorderThickness="1"
				BorderBrush="{StaticResource ResourceKey={x:Static def:Definitions.PanelBackgroundLevel0_4}}">
			<local:BitmapViewerInternal x:Name="BitmapViewerContainerInternal"
										DataContext="{Binding ElementName=BitmapViewerContainer, Path=ViewModel}"
										GlobalHeight="{Binding GlobalHeight}"
										GlobalWidth="{Binding GlobalWidth}"
										GlobalOffX="{Binding GlobalOffX}"
										GlobalOffY="{Binding GlobalOffY}"
										FrameHeight="{Binding FrameHeight}"
										FrameWidth="{Binding FrameWidth}"
										FrameOffX="{Binding FrameOffX}"
										FrameOffY="{Binding FrameOffY}"
										FrameSource="{Binding FrameSource}">
				<UserControl.Background>
					<ImageBrush Stretch="None"
								ImageSource="/ArtWiz;component/resources/spr_viewer_background.png" />
				</UserControl.Background>
				<Canvas x:Name="ContainerCanvas"
						ClipToBounds="True"
						Background="Transparent"
						Width="{Binding ElementName=BitmapViewerContainerInternal,Path=ActualWidth}"
						Height="{Binding ElementName=BitmapViewerContainerInternal,Path=ActualHeight}">
					<Rectangle x:Name="ContainerBackgroundColorFilter"
							   Fill="#FF08273D"
							   Opacity="0.5"
							   Height="{Binding ElementName=ContainerCanvas, Path=ActualHeight}"
							   Width="{Binding ElementName=ContainerCanvas, Path=ActualWidth}" />

					<Canvas x:Name="DragableContainer"
							Visibility="Visible"
							Width="{Binding ElementName=BitmapViewerContainerInternal,Path=GlobalWidth}"
							Height="{Binding ElementName=BitmapViewerContainerInternal,Path=GlobalHeight}">
						<Canvas ClipToBounds="True"
								x:Name="NoStretchContainer"
								Visibility="Visible"
								Width="{Binding ElementName=BitmapViewerContainerInternal,Path=GlobalWidth}"
								Height="{Binding ElementName=BitmapViewerContainerInternal,Path=GlobalHeight}">
							<Canvas.Left>
								<Binding Path="GlobalOffX"
										 FallbackValue="10"
										 ElementName="BitmapViewerContainerInternal" />
							</Canvas.Left>
							<Canvas.Top>
								<Binding Path="GlobalOffY"
										 FallbackValue="10"
										 ElementName="BitmapViewerContainerInternal" />
							</Canvas.Top>
							<Image x:Name="SprGlobalBackgroundImage"
								   Stretch="Fill"
								   Source="{Binding ElementName=BitmapViewerContainerInternal, Path=GlobalBackgroundSource}"
								   Width="{Binding ElementName=BitmapViewerContainerInternal,Path=GlobalWidth, FallbackValue=500}"
								   Height="{Binding ElementName=BitmapViewerContainerInternal,Path=GlobalHeight, FallbackValue=200}" />
							<Canvas ClipToBounds="True"
									SnapsToDevicePixels="True"
									Canvas.Left="{Binding ElementName=BitmapViewerContainerInternal, Path=FrameOffX,FallbackValue=60}"
									Canvas.Top="{Binding ElementName=BitmapViewerContainerInternal, Path=FrameOffY,FallbackValue=60}"
									Width="{Binding ElementName=BitmapViewerContainerInternal,Path=FrameWidth, FallbackValue=200}"
									Height="{Binding ElementName=BitmapViewerContainerInternal,Path=FrameHeight, FallbackValue=100}">

								<Rectangle SnapsToDevicePixels="True"
										   x:Name="DecodedFrameBackground"
										   Width="{Binding ElementName=BitmapViewerContainerInternal,Path=FrameWidth, FallbackValue=200}"
										   Canvas.Left="0"
										   Canvas.Top="0"
										   Height="{Binding ElementName=BitmapViewerContainerInternal,Path=FrameHeight, FallbackValue=100}" />

								<Image x:Name="SprFrameImage"
									   Stretch="None"
									   HorizontalAlignment="Left"
									   VerticalAlignment="Top"
									   SnapsToDevicePixels="True"
									   Width="{Binding ElementName=BitmapViewerContainerInternal,Path=FrameWidth, FallbackValue=200}"
									   Height="{Binding ElementName=BitmapViewerContainerInternal,Path=FrameHeight, FallbackValue=100}"
									   Source="{Binding ElementName=BitmapViewerContainerInternal, Path=FrameSource}" />
							</Canvas>
						</Canvas>
					</Canvas>

					<Rectangle Stroke="Red"
							   StrokeThickness="0"
							   SnapsToDevicePixels="True"
							   x:Name="LayoutBoundRect"
							   Visibility="{Binding ElementName=LayoutBoundButton,Path=IsChecked, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static cvt:InvisibleType.HIDDEN}}">
						<Rectangle.Height>
							<MultiBinding Converter="{StaticResource FormulaConverter}"
										  ConverterParameter="1 * {0} + 4">
								<Binding Path="ActualHeight"
										 ElementName="StretchContainer" />
							</MultiBinding>
						</Rectangle.Height>

						<Rectangle.Width>
							<MultiBinding Converter="{StaticResource FormulaConverter}"
										  ConverterParameter="1 * {0} + 4">
								<Binding Path="ActualWidth"
										 ElementName="StretchContainer" />
							</MultiBinding>
						</Rectangle.Width>
					</Rectangle>

					<Rectangle Fill="{StaticResource ResourceKey={x:Static def:Definitions.ButtonAndIconBrushLevel0}}"
							   Width="{Binding ElementName=ContainerCanvas, Path=ActualWidth}"
							   Height="2"
							   Visibility="{Binding ElementName=LayoutBoundButton,Path=IsChecked, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static cvt:InvisibleType.HIDDEN}}">
						<Canvas.Top>
							<MultiBinding Converter="{StaticResource FormulaConverter}"
										  ConverterParameter="0.5 * {0}">
								<Binding Path="ActualHeight"
										 ElementName="ContainerCanvas" />
							</MultiBinding>
						</Canvas.Top>
					</Rectangle>

					<Rectangle Fill="{StaticResource ResourceKey={x:Static def:Definitions.ButtonAndIconBrushLevel0}}"
							   Height="{Binding ElementName=ContainerCanvas, Path=ActualWidth}"
							   Width="2"
							   Visibility="{Binding ElementName=LayoutBoundButton,Path=IsChecked, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static cvt:InvisibleType.HIDDEN}}">
						<Canvas.Left>
							<MultiBinding Converter="{StaticResource FormulaConverter}"
										  ConverterParameter="0.5 * {0}">
								<Binding Path="ActualWidth"
										 ElementName="ContainerCanvas" />
							</MultiBinding>
						</Canvas.Left>
					</Rectangle>

					<Viewbox VerticalAlignment="Top"
							 HorizontalAlignment="Left"
							 Visibility="Collapsed"
							 Stretch="Uniform"
							 x:Name="StretchContainer">
						<Viewbox.Height>
							<MultiBinding Converter="{StaticResource FormulaConverter}"
										  ConverterParameter="1 * {0} * {1} - {2} * 2">
								<Binding Path="ActualHeight"
										 ElementName="ContainerCanvas" />
								<Binding Path="ViewBoxZoomDelta"
										 ElementName="BitmapViewerContainerInternal" />
								<Binding Path="StrokeThickness"
										 ElementName="LayoutBoundRect" />
							</MultiBinding>
						</Viewbox.Height>
						<Viewbox.Width>
							<MultiBinding Converter="{StaticResource FormulaConverter}"
										  ConverterParameter="1 * {0} * {1} - {2} * 2">
								<Binding Path="ActualWidth"
										 ElementName="ContainerCanvas" />
								<Binding Path="ViewBoxZoomDelta"
										 ElementName="BitmapViewerContainerInternal" />
								<Binding Path="StrokeThickness"
										 ElementName="LayoutBoundRect" />
							</MultiBinding>
						</Viewbox.Width>
						<Canvas ClipToBounds="True"
								x:Name="StretchContainerCanvas">
							<Canvas.Height>
								<MultiBinding Converter="{StaticResource FormulaConverter}"
											  ConverterParameter="1 * {0} + {1}">
									<Binding Path="GlobalHeight"
											 ElementName="BitmapViewerContainerInternal" />
									<Binding Path="GlobalOffY"
											 ElementName="BitmapViewerContainerInternal" />
								</MultiBinding>
							</Canvas.Height>

							<Canvas.Width>
								<MultiBinding Converter="{StaticResource FormulaConverter}"
											  ConverterParameter="1 * {0} + {1}">
									<Binding Path="GlobalWidth"
											 ElementName="BitmapViewerContainerInternal" />
									<Binding Path="GlobalOffX"
											 ElementName="BitmapViewerContainerInternal" />
								</MultiBinding>
							</Canvas.Width>


							<Canvas ClipToBounds="True"
									Width="{Binding ElementName=BitmapViewerContainerInternal,Path=GlobalWidth}"
									Height="{Binding ElementName=BitmapViewerContainerInternal,Path=GlobalHeight}"
									Canvas.Left="{Binding ElementName=BitmapViewerContainerInternal,Path=GlobalOffX}"
									Canvas.Top="{Binding ElementName=BitmapViewerContainerInternal,Path=GlobalOffY}">
								<Image x:Name="SprGlobalBackgroundImage2"
									   Stretch="Fill"
									   Source="{Binding ElementName=BitmapViewerContainerInternal, Path=GlobalBackgroundSource}"
									   Width="{Binding ElementName=BitmapViewerContainerInternal,Path=GlobalWidth, FallbackValue=500}"
									   Height="{Binding ElementName=BitmapViewerContainerInternal,Path=GlobalHeight, FallbackValue=200}" />
								<Canvas ClipToBounds="True"
										SnapsToDevicePixels="True"
										Canvas.Left="{Binding ElementName=BitmapViewerContainerInternal, Path=FrameOffX,FallbackValue=60}"
										Canvas.Top="{Binding ElementName=BitmapViewerContainerInternal, Path=FrameOffY,FallbackValue=60}"
										Width="{Binding ElementName=BitmapViewerContainerInternal,Path=FrameWidth, FallbackValue=200}"
										Height="{Binding ElementName=BitmapViewerContainerInternal,Path=FrameHeight, FallbackValue=100}">

									<Rectangle x:Name="DecodedFrameBackground2"
											   SnapsToDevicePixels="True"
											   Width="{Binding ElementName=BitmapViewerContainerInternal,Path=FrameWidth, FallbackValue=200}"
											   Canvas.Left="0"
											   Canvas.Top="0"
											   Height="{Binding ElementName=BitmapViewerContainerInternal,Path=FrameHeight, FallbackValue=100}" />

									<Image x:Name="SprFrameImage2"
										   Stretch="None"
										   HorizontalAlignment="Left"
										   VerticalAlignment="Top"
										   SnapsToDevicePixels="True"
										   Width="{Binding ElementName=BitmapViewerContainerInternal,Path=FrameWidth, FallbackValue=200}"
										   Height="{Binding ElementName=BitmapViewerContainerInternal,Path=FrameHeight, FallbackValue=100}"
										   Source="{Binding ElementName=BitmapViewerContainerInternal, Path=FrameSource}" />
								</Canvas>

							</Canvas>

						</Canvas>

					</Viewbox>
				</Canvas>
			</local:BitmapViewerInternal>

		</Border>

		<TextBlock Text="&#xf110;"
				   Grid.Row="0"
				   Grid.Column="1"
				   Visibility="{Binding ElementName=BitmapViewerContainer, Path=ShowLoadingIcon, Converter={StaticResource BoolToVisibilityConverter}}"
				   x:Name="RotatingTextBlock"
				   FontSize="50"
				   HorizontalAlignment="Center"
				   VerticalAlignment="Center"
				   FontFamily="/ArtWiz;component/Resources/Font Awesome 6 Free-Solid-900.otf#Font Awesome 6 Free Solid"
				   RenderTransformOrigin="0.5,0.5"
				   Foreground="{StaticResource ResourceKey={x:Static def:Definitions.ButtonAndIconBrushLevel0}}"
				   FontWeight="ExtraBold">
			<TextBlock.Resources>
				<Storyboard x:Key="RotationStoryboard"
							RepeatBehavior="Forever">
					<DoubleAnimation Storyboard.TargetName="RotatingTextBlock"
									 Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
									 From="0"
									 To="360"
									 Duration="0:0:1" />
				</Storyboard>
			</TextBlock.Resources>
			<TextBlock.RenderTransform>
				<RotateTransform />
			</TextBlock.RenderTransform>
			<TextBlock.Triggers>
				<EventTrigger RoutedEvent="Loaded">
					<BeginStoryboard x:Name="RotationBeginStoryboard"
									 Storyboard="{StaticResource RotationStoryboard}" />
				</EventTrigger>
				<EventTrigger RoutedEvent="Unloaded">
					<StopStoryboard BeginStoryboardName="RotationBeginStoryboard" />
				</EventTrigger>
			</TextBlock.Triggers>
		</TextBlock>

		<Border Grid.Column="0"
				BorderThickness="1"
				Margin="{Binding ElementName=BitmapViewerContainer, Path=ToolBoxMargin}"
				Grid.RowSpan="2"
				Width="{Binding ElementName=BitmapViewerContainer, Path=ToolBoxWidth, FallbackValue=40}"
				BorderBrush="{Binding ElementName=BitmapViewerContainer, Path=ToolBoxBorderBrush}"
				Background="{Binding ElementName=BitmapViewerContainer, Path=ToolBoxBackground, FallbackValue={StaticResource ResourceKey={x:Static def:Definitions.PanelBackgroundLevel0_1}}}">
			<StackPanel Orientation="Vertical">
				<local:IconToggle x:Name="FitToScreenButton"
								  Visibility="{Binding ElementName=BitmapViewerContainer,Path=UseFitToScreenFunction, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static cvt:InvisibleType.COLLAPSED}}"
								  Click="FitToScreenButtonClick"
								  ToolTip="Fit content to screen size"
								  Style="{StaticResource ToolButtonStyle}"
								  OffIconData="{StaticResource ResourceKey={x:Static def:Definitions.UnFitToScreenIconGeometry}}"
								  OnIconData="{StaticResource ResourceKey={x:Static def:Definitions.FitToScreenIconGeometry}}"
								  DefaultIconData="{StaticResource ResourceKey={x:Static def:Definitions.UnFitToScreenIconGeometry}}" />

				<local:IconToggle x:Name="TransparentBackgroundButton"
								  Visibility="{Binding ElementName=BitmapViewerContainer,Path=UseTransparentBackgroundFunction, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static cvt:InvisibleType.COLLAPSED}}"
								  Click="TransparentBackgroundButtonClick"
								  ToolTip="Transparent global background"
								  Style="{StaticResource ToolButtonStyle}"
								  OffIconData="{StaticResource ResourceKey={x:Static def:Definitions.GlobalUnTransparentBackgroundIconGeometry}}"
								  OnIconData="{StaticResource ResourceKey={x:Static def:Definitions.GlobalTransparentBackgroundIconGeometry}}"
								  DefaultIconData="{StaticResource ResourceKey={x:Static def:Definitions.GlobalTransparentBackgroundIconGeometry}}" />

				<local:IconToggle x:Name="TransparenDecodedFrameBackgroundButton"
								  Visibility="{Binding ElementName=BitmapViewerContainer,Path=UseTransparenDecodedFrameBackgroundFunction, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static cvt:InvisibleType.COLLAPSED}}"
								  Click="TransparenDecodedFrameBackgroundButtonClick"
								  ToolTip="Transparent global background"
								  Style="{StaticResource ToolButtonStyle}"
								  OffIconData="{StaticResource ResourceKey={x:Static def:Definitions.FrameUnTransparentBackgroundIconGeometry}}"
								  OnIconData="{StaticResource ResourceKey={x:Static def:Definitions.FrameTransparentBackgroundIconGeometry}}"
								  DefaultIconData="{StaticResource ResourceKey={x:Static def:Definitions.FrameTransparentBackgroundIconGeometry}}" />

				<local:IconToggle x:Name="LayoutBoundButton"
								  Visibility="{Binding ElementName=BitmapViewerContainer,Path=UseLayoutBoundFunction, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static cvt:InvisibleType.COLLAPSED}}"
								  Click="ShowLayoutBoundButtonClick"
								  ToolTip="Transparent global background"
								  Style="{StaticResource ToolButtonStyle}"
								  IsEnabled="{Binding ElementName=FitToScreenButton, Path=IsChecked}"
								  OffIconData="{StaticResource ResourceKey={x:Static def:Definitions.LayoutBoundIconGeometry}}"
								  OnIconData="{StaticResource ResourceKey={x:Static def:Definitions.LayoutBoundIconGeometry}}"
								  DefaultIconData="{StaticResource ResourceKey={x:Static def:Definitions.LayoutBoundIconGeometry}}" />

				<local:IconToggle Click="ResetViewPortPositionButtonClick"
								  Visibility="{Binding ElementName=BitmapViewerContainer,Path=UseResetViewPortPositionFunction, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static cvt:InvisibleType.COLLAPSED}}"
								  ToolTip="Reset view port position"
								  Style="{StaticResource ToolButtonStyle}"
								  OffIconData="{StaticResource ResourceKey={x:Static def:Definitions.ResetIconGeometry}}"
								  OnIconData="{StaticResource ResourceKey={x:Static def:Definitions.ResetIconGeometry}}"
								  DefaultIconData="{StaticResource ResourceKey={x:Static def:Definitions.ResetIconGeometry}}" />

				<local:IconToggle x:Name="ZoomButton"
								  Visibility="{Binding ElementName=BitmapViewerContainer,Path=UseZoomFunction, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static cvt:InvisibleType.COLLAPSED}}"
								  Style="{StaticResource ToolButtonStyle}"
								  IsEnabled="{Binding ElementName=FitToScreenButton, Path=IsChecked}"
								  ToolTip="Reset view port position"
								  OffIconData="{StaticResource ResourceKey={x:Static def:Definitions.MagnifyIconGeometry}}"
								  OnIconData="{StaticResource ResourceKey={x:Static def:Definitions.MagnifyIconGeometry}}"
								  DefaultIconData="{StaticResource ResourceKey={x:Static def:Definitions.MagnifyIconGeometry}}" />

				<Popup x:Name="ZoomingPopup"
					   IsOpen="{Binding IsChecked, ElementName=ZoomButton}"
					   AllowsTransparency="True"
					   Placement="Right"
					   HorizontalOffset="12"
					   VerticalOffset="-5"
					   PlacementTarget="{Binding ElementName=ZoomButton}">
					<Border Grid.Row="0"
							Grid.Column="1"
							BorderThickness="3"
							BorderBrush="{StaticResource ResourceKey={x:Static def:Definitions.PanelBackgroundLevel0_2}}"
							Background="{StaticResource ResourceKey={x:Static def:Definitions.PanelBackgroundLevel0_1}}"
							Width="286"
							Height="40"
							CornerRadius="10">
						<Grid VerticalAlignment="Center">
							<Grid.ColumnDefinitions>
								<ColumnDefinition />
								<ColumnDefinition Width="auto" />
							</Grid.ColumnDefinitions>

							<Slider x:Name="ViewBoxDeltaSlider"
									Margin="5,0,0,0"
									Maximum="2"
									Value="{Binding ElementName=BitmapViewerContainerInternal, Path=ViewBoxZoomDelta}"
									IsSnapToTickEnabled="True"
									TickFrequency="0.01" />
							<TextBlock Grid.Column="1"
									   MaxWidth="40"
									   Margin="0,0,5,0"
									   VerticalAlignment="Center"
									   FontWeight="Bold"
									   Foreground="{StaticResource ResourceKey={x:Static def:Definitions.TextForegroundBrushLevel0}}"
									   HorizontalAlignment="Center"
									   Text="{Binding ElementName=ViewBoxDeltaSlider, Path=Value, StringFormat=N2}" />
						</Grid>
					</Border>
				</Popup>


			</StackPanel>
		</Border>

		<ContentControl Grid.Column="1"
						Grid.Row="1"
						Content="{Binding ElementName=BitmapViewerContainer, Path=Footer}" />
	</Grid>

</UserControl>
